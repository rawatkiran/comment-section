{"ast":null,"code":"var _jsxFileName = \"/Users/k0r0azl/Projects/learning/comment-section/src/Comment/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  comment,\n  onDelete,\n  onEdit\n}) => {\n  _s();\n  const [isEditing, setEditing] = useState(false);\n  const [editedComment, setEditedComment] = useState(comment.text);\n  return (\n    /*#__PURE__*/\n    // <div className=\"container\">\n    // </div>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: comment.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: editedComment,\n          onChange: e => setEditedComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveEdit,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => onDelete(comment.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Comment, \"29yjzlqh1NrxQIKEkKy+7ZCn0bY=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","comment","onDelete","onEdit","_s","isEditing","setEditing","editedComment","setEditedComment","text","children","name","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","handleSaveEdit","handleEdit","id","_c","$RefreshReg$"],"sources":["/Users/k0r0azl/Projects/learning/comment-section/src/Comment/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst Comment = ({ comment, onDelete, onEdit }) => {\n  const [isEditing, setEditing] = useState(false);\n  const [editedComment, setEditedComment] = useState(comment.text);\n  return (\n    // <div className=\"container\">\n    // </div>\n    <div>\n      <div>{comment.name}</div>\n      {isEditing ? (\n        <>\n          <textarea\n            value={editedComment}\n            onChange={(e) => setEditedComment(e.target.value)}\n          />\n          <button onClick={handleSaveEdit}>Save</button>\n        </>\n      ) : (\n        <>\n          <div>{comment.text}</div>\n          <button onClick={handleEdit}>Edit</button>\n          <button onClick={() => onDelete(comment.id)}>Delete</button>\n        </>\n      )}\n    </div>\n  );\n};\nexport default Comment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,OAAO,GAAGA,CAAC;EAAEC,OAAO;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAACM,OAAO,CAACQ,IAAI,CAAC;EAChE;IAAA;IACE;IACA;IACAZ,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAMT,OAAO,CAACU;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EACxBV,SAAS,gBACRR,OAAA,CAAAE,SAAA;QAAAW,QAAA,gBACEb,OAAA;UACEmB,KAAK,EAAET,aAAc;UACrBU,QAAQ,EAAGC,CAAC,IAAKV,gBAAgB,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACFlB,OAAA;UAAQuB,OAAO,EAAEC,cAAe;UAAAX,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC9C,CAAC,gBAEHlB,OAAA,CAAAE,SAAA;QAAAW,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAMT,OAAO,CAACQ;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACzBlB,OAAA;UAAQuB,OAAO,EAAEE,UAAW;UAAAZ,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ClB,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACD,OAAO,CAACsB,EAAE,CAAE;UAAAb,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eAC5D,CACH;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;AAEV,CAAC;AAACX,EAAA,CAzBIJ,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}