{"ast":null,"code":"var _jsxFileName = \"/Users/k0r0azl/Projects/learning/comment-section-trial/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport CommentList from \"./CommentList\";\nimport CommentForm from \"./CommentForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    // Load comments from localStorage on mount\n    const storedComments = JSON.parse(localStorage.getItem(\"comments\")) || [];\n    setComments(storedComments);\n  }, []);\n  useEffect(() => {\n    // Save comments to localStorage whenever comments change\n    if (comments) localStorage.setItem(\"comments\", JSON.stringify(comments));\n  }, [comments]);\n  const handleAddComment = newComment => {\n    setComments([...comments, {\n      ...newComment,\n      timestamp: new Date()\n    }]);\n  };\n  const handleDeleteComment = commentId => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n  const handleEditComment = (commentId, newText) => {\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      text: newText\n    } : comment));\n  };\n  const handleAddReply = (commentId, reply) => {\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      replies: [reply]\n    } : comment));\n  };\n  const handleEditReply = (commentId, newReply) => {\n    console.log(commentId, newReply, \"NEW REPLY\");\n    setComments(prevComments => prevComments.map(comment => comment.id === commentId ? {\n      ...comment,\n      replies: [newReply]\n    } : comment));\n  };\n  console.log(comments, \"COOOOOOO\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n      onSubmit: handleAddComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: comments,\n      onDelete: handleDeleteComment,\n      onEdit: handleEditComment,\n      onReply: handleAddReply,\n      onEditReply: handleEditReply\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gb0IamD7JIldgnM2007Mizf1VNM=\");\n_c = App;\nexport default App;\n\n//{ ...comment, replies: [...comment?.replies, reply] }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CommentList","CommentForm","jsxDEV","_jsxDEV","App","_s","comments","setComments","storedComments","JSON","parse","localStorage","getItem","setItem","stringify","handleAddComment","newComment","timestamp","Date","handleDeleteComment","commentId","filter","comment","id","handleEditComment","newText","prevComments","map","text","handleAddReply","reply","replies","handleEditReply","newReply","console","log","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onDelete","onEdit","onReply","onEditReply","_c","$RefreshReg$"],"sources":["/Users/k0r0azl/Projects/learning/comment-section-trial/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CommentList from \"./CommentList\";\nimport CommentForm from \"./CommentForm\";\n\nfunction App() {\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    // Load comments from localStorage on mount\n    const storedComments = JSON.parse(localStorage.getItem(\"comments\")) || [];\n    setComments(storedComments);\n  }, []);\n\n  useEffect(() => {\n    // Save comments to localStorage whenever comments change\n    if (comments) localStorage.setItem(\"comments\", JSON.stringify(comments));\n  }, [comments]);\n\n  const handleAddComment = (newComment) => {\n    setComments([...comments, { ...newComment, timestamp: new Date() }]);\n  };\n\n  const handleDeleteComment = (commentId) => {\n    setComments(comments.filter((comment) => comment.id !== commentId));\n  };\n\n  const handleEditComment = (commentId, newText) => {\n    setComments((prevComments) =>\n      prevComments.map((comment) =>\n        comment.id === commentId ? { ...comment, text: newText } : comment\n      )\n    );\n  };\n\n  const handleAddReply = (commentId, reply) => {\n    setComments((prevComments) =>\n      prevComments.map((comment) =>\n        comment.id === commentId ? { ...comment, replies: [reply] } : comment\n      )\n    );\n  };\n\n  const handleEditReply = (commentId, newReply) => {\n    console.log(commentId, newReply, \"NEW REPLY\");\n    setComments((prevComments) =>\n      prevComments.map((comment) =>\n        comment.id === commentId ? { ...comment, replies: [newReply] } : comment\n      )\n    );\n  };\n  console.log(comments, \"COOOOOOO\");\n\n  return (\n    <div>\n      <CommentForm onSubmit={handleAddComment} />\n      <CommentList\n        comments={comments}\n        onDelete={handleDeleteComment}\n        onEdit={handleEditComment}\n        onReply={handleAddReply}\n        onEditReply={handleEditReply}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n//{ ...comment, replies: [...comment?.replies, reply] }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}